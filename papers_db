#! /usr/bin/env bash

set -e

declare -r DIR_ROOT="$HOME/.papers_db"
declare -r DIR_DATA="$DIR_ROOT/data"
declare -r DIR_DATA_DOWNLOADS="$DIR_DATA/downloads"
declare -r DIR_DATA_PAPERS="$DIR_DATA/papers"
declare -r FILE_DB="$DIR_DATA/papers.db"


if ! echo "foo" | md5sum >/dev/null 2>&1; then
    declare -r MD5SUM_CMD='md5'
else
    declare -r MD5SUM_CMD="md5sum"
fi


env_create() {
    mkdir -p "$DIR_ROOT"
    mkdir -p "$DIR_DATA"
    mkdir -p "$DIR_DATA_DOWNLOADS"
    mkdir -p "$DIR_DATA_PAPERS"
}

env_clean() {
    rm -rf "$DIR_DATA_DOWNLOADS"
}


die() {
    echo "$1"
    exit 1
}

md5cmd() {
    $MD5SUM_CMD "$1" | awk '{ print $1 }'
}

db() {
    sqlite3 "$FILE_DB" "$@"
}

init() {
    db 'CREATE TABLE papers (doc_id STRING PRIMARY KEY, path STRING)'
    db 'CREATE TABLE tags (tag STRING, doc_id STRING, PRIMARY KEY (tag, doc_id), FOREIGN KEY (doc_id) REFERENCES papers(doc_id))'
}

delete() {
    declare -r md5=$(md5cmd "$paper")
    db "DELETE FROM tags WHERE doc_id = \"$md5\""
    db "DELETE FROM papers WHERE doc_id = \"$md5\""
}

all_papers() {
    db "SELECT path FROM papers"
}

add() {
    declare -r paper="$1"
    [ -f "$paper" ] || die "$paper does not exist"
    declare -r md5=$(md5cmd "$paper")
    db "INSERT INTO papers (doc_id, path) VALUES(\"$md5\", \"$paper\")"
}

tag_add() {
    declare -r paper="$1"
    declare -r tag="$2"

    declare -r md5=$(md5cmd "$paper")

    db "INSERT INTO tags (tag, doc_id) VALUES (\"$tag\", \"$md5\")"
}

tag_show() {
    declare -r paper="$1"
    declare -r md5=$(md5cmd "$paper")
    db "SELECT tag FROM tags WHERE doc_id = \"$md5\""
}

tag_search() {
    declare -r arg=("$@")

    local subselect=""
    if [ "$#" -gt "1" ]; then
    declare -r tag="${arg[1]}"
    local subselect="SELECT doc_id FROM tags WHERE tag = \"$tag\""
    fi

    for ((i=2;i<=$1;i++)); do
    local subselect=$subselect" INTERSECT SELECT doc_id FROM tags WHERE tag = \"${arg[i]}\""
    done

    select="SELECT path FROM papers WHERE doc_id IN ($subselect)"

    db "$select"
}

tag_all() {
    db "SELECT DISTINCT tag FROM tags"
}


dispatch() {
    case "$1" in
        "init")
            init
    ;;  "all")
            all_papers
    ;;  "add")
            shift
            declare -r paper="$1"
            add "$paper"
            shift
            for tag in "$@"; do
                tag_add "$paper" "$tag"
            done
    ;;  "add-from-url")
            shift
            declare -r tmpdir=$(mktemp -d "$DIR_DATA_DOWNLOADS"/file.XXX)
            pushd "$tmpdir"
            declare -r wget_status=$(wget "$1"; echo $?)
            declare -r file_name="$(ls)"
            popd
            if [ -f "$tmpdir/$file_name" -a "$wget_status" -eq 0 ]; then
                declare -r file_path_tmp="$tmpdir/$file_name"
                declare -r file_path_perm="$DIR_DATA_PAPERS/$file_name"
                mv "$file_path_tmp" "$file_path_perm"
                add "$file_path_perm"
                shift
                for tag in "$@"; do
                    tag_add "$file_path_perm" "$tag"
                done
            else
                echo "Failed to download"
            fi
    ;;  "tag-show")
            tag_show "$2"
    ;;  "tag-search")
            shift
            tag_search "$#" "$@"
    ;;  "tag-all")
            tag_all
    ;;  "tag-add")
            shift
            paper="$1"
            shift
            for tag in "$@"; do
                tag_add "$paper" "$tag"
            done
    ;;  *)
            echo "Unknown command: $1"
            exit 1
    esac
}


main() {
    trap env_clean EXIT
    env_create
    dispatch "$@"
}


main "$@"
