#! /usr/bin/env bash

set -e

declare -r DIR_ROOT="$HOME/.papers_db"
declare -r DIR_DATA="$DIR_ROOT/data"
declare -r DIR_DATA_DOWNLOADS="$DIR_DATA/downloads"
declare -r DIR_DATA_PAPERS="$DIR_DATA/papers"
declare -r FILE_DB="$DIR_DATA/papers.db"

declare -r DB_TBL_PAPERS='papers'
declare -r DB_TBL_TAGS='tags'


if ! echo "foo" | md5sum > /dev/null 2>&1; then
    declare -r MD5SUM_CMD='md5'
else
    declare -r MD5SUM_CMD="md5sum"
fi


env_create() {
    mkdir -p "$DIR_ROOT"
    mkdir -p "$DIR_DATA"
    mkdir -p "$DIR_DATA_DOWNLOADS"
    mkdir -p "$DIR_DATA_PAPERS"
}

env_clean() {
    rm -rf "$DIR_DATA_DOWNLOADS"
}

die() {
    echo "$1"
    exit 1
}

md5cmd() {
    $MD5SUM_CMD "$1" | awk '{ print $1 }'
}

db() {
    sqlite3 "$FILE_DB" "$@"
}

command_init() {
    db "CREATE TABLE \"$DB_TBL_PAPERS\"
        ( doc_id STRING PRIMARY KEY
        , path STRING
        )"
    db "CREATE TABLE \"$DB_TBL_TAGS\"
        ( tag STRING
        , doc_id STRING
        , PRIMARY KEY (tag, doc_id)
        , FOREIGN KEY (doc_id) REFERENCES \"$DB_TBL_PAPERS\"(doc_id)
        )"
}

delete() {
    declare -r md5=$(md5cmd "$paper")
    db "DELETE FROM \"$DB_TBL_TAGS\" WHERE doc_id = \"$md5\""
    db "DELETE FROM \"$DB_TBL_PAPERS\" WHERE doc_id = \"$md5\""
}

command_all_papers() {
    db "SELECT path FROM \"$DB_TBL_PAPERS\""
}

add() {
    declare -r paper="$1"
    [ -f "$paper" ] || die "$paper does not exist"
    declare -r md5=$(md5cmd "$paper")
    db "INSERT INTO \"$DB_TBL_PAPERS\" (doc_id, path) VALUES(\"$md5\", \"$paper\")"
}

tag_add() {
    declare -r paper="$1"
    declare -r tag="$2"

    declare -r md5=$(md5cmd "$paper")

    db "INSERT INTO \"$DB_TBL_TAGS\" (tag, doc_id) VALUES (\"$tag\", \"$md5\")"
}

command_tag_show() {
    declare -r paper="$1"
    declare -r md5=$(md5cmd "$paper")
    db "SELECT tag FROM \"$DB_TBL_TAGS\" WHERE doc_id = \"$md5\""
}

command_tag_search() {
    declare -r arg=("$@")

    local subselect=""
    if [ "$#" -gt "1" ]; then
    declare -r tag="${arg[1]}"
    local subselect="SELECT doc_id FROM \"$DB_TBL_TAGS\" WHERE tag = \"$tag\""
    fi

    for ((i=2;i<=$1;i++)); do
        local subselect="\
            $subselect \
            INTERSECT SELECT doc_id \
            FROM \"$DB_TBL_TAGS\" \
            WHERE tag = \"${arg[i]}\"\
        "
    done

    select="SELECT path FROM \"$DB_TBL_PAPERS\" WHERE doc_id IN ($subselect)"

    db "$select"
}

command_tag_all() {
    db "SELECT DISTINCT tag FROM \"$DB_TBL_TAGS\""
}

dispatch() {
    case "$1" in
        "init")
            command_init
    ;;  "all")
            command_all_papers
    ;;  "add")
            shift
            declare -r paper="$1"
            add "$paper"
            shift
            for tag in "$@"; do
                tag_add "$paper" "$tag"
            done
    ;;  "add-from-url")
            shift
            declare -r tmpdir=$(mktemp -d "$DIR_DATA_DOWNLOADS"/file.XXX)
            pushd "$tmpdir"
            declare -r wget_status=$(wget "$1"; echo $?)
            declare -r file_name="$(ls)"
            popd
            if [ -f "$tmpdir/$file_name" -a "$wget_status" -eq 0 ]; then
                declare -r file_path_tmp="$tmpdir/$file_name"
                declare -r file_path_perm="$DIR_DATA_PAPERS/$file_name"
                mv "$file_path_tmp" "$file_path_perm"
                add "$file_path_perm"
                shift
                for tag in "$@"; do
                    tag_add "$file_path_perm" "$tag"
                done
            else
                echo "Failed to download"
            fi
    ;;  "tag-show")
            command_tag_show "$2"
    ;;  "tag-search")
            shift
            command_tag_search "$#" "$@"
    ;;  "tag-all")
            command_tag_all
    ;;  "tag-add")
            shift
            paper="$1"
            shift
            for tag in "$@"; do
                tag_add "$paper" "$tag"
            done
    ;;  *)
            echo "Unknown command: $1"
            exit 1
    esac
}


main() {
    trap env_clean EXIT
    env_create
    dispatch "$@"
}


main "$@"
